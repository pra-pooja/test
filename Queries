------------------------------Factory Terminal------------------
export COMPOSITION=$(echo -n "Powder,Explosives" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Passed" | base64 | tr -d \\n)
export SERIALS=$(echo -n "1001-1009" | base64 | tr -d \\n)


peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["BATCH-001","5.62mm Mortar Shells","1000","2025-06-15","2035-06-15","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"

export COMPOSITION=$(echo -n "Liquid,Chemicals" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Passed" | base64 | tr -d \\n)
export SERIALS=$(echo -n "2001-2010" | base64 | tr -d \\n)

peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["Batch-002","Industrial Solvent","500","2025-07-01","2030-07-01","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"

export COMPOSITION=$(echo -n "Solid,Metals" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Failed" | base64 | tr -d \\n)
export SERIALS=$(echo -n "3001-3015" | base64 | tr -d \\n)

peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["Batch-003","Steel Rods","1500","2025-08-10","2040-08-10","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"


export COMPOSITION=$(echo -n "Gas,Flammable" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Passed" | base64 | tr -d \\n)
export SERIALS=$(echo -n "4001-4020" | base64 | tr -d \\n)

peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["Batch-004","Propane Canisters","800","2025-05-20","2030-07-01","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"
  
export COMPOSITION=$(echo -n "Powder,Pharmaceuticals" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Passed" | base64 | tr -d \\n)
export SERIALS=$(echo -n "5001-5010" | base64 | tr -d \\n)

peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["Batch-005","Painkillers","2000","2025-09-05","2028-09-05","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"

export COMPOSITION=$(echo -n "Granules,Agricultural" | base64 | tr -d \\n)
export INSPECTION=$(echo -n "Pending" | base64 | tr -d \\n)
export SERIALS=$(echo -n "6001-6025" | base64 | tr -d \\n)

peer chaincode invoke \
  -o localhost:7050 \
  --ordererTLSHostnameOverride orderer.supplychain.com \
  --tls --cafile $ORDERER_CA \
  -C $CHANNEL_NAME \
  -n supplychain \
  --peerAddresses localhost:7051 --tlsRootCertFiles $FACTORY_PEER_TLSROOTCERT \
  --peerAddresses localhost:9051 --tlsRootCertFiles $LOGISTICS_PEER_TLSROOTCERT \
  --peerAddresses localhost:11051 --tlsRootCertFiles $DEPOT_PEER_TLSROOTCERT \
  --peerAddresses localhost:12051 --tlsRootCertFiles $HQ_PEER_TLSROOTCERT \
  -c '{"function":"CreateBatch","Args":["Batch-006","Fertilizer","3000","2025-04-15","2030-07-01","CREATED"]}' \
  --transient "{\"composition\":\"$COMPOSITION\",\"inspection\":\"$INSPECTION\",\"serials\":\"$SERIALS\"}"

-------------ReadBatchBoth----------
peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"ReadBatchBoth","Args":["Batch-001"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"ReadBatchBoth","Args":["Batch-002"]}'

---------------ReadAllBatches---------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"Args":["ReadAllBatches"]}'


----------------------------------Logistics Terminal---------------------------------

# ---------- Transfer Batch-001 ----------
export ROUTE=$(echo -n "Route-A" | base64 | tr -d \\n)
export CONVOY=$(echo -n "CONVOY-101" | base64 | tr -d \\n)
export TRANSPORTER=$(echo -n "Transporter Alpha" | base64 | tr -d \\n)


peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"LogisticsContract:TransferBatch","Args":["Batch-001","FactoryMSP","DepotMSP"]}'   --transient "{\"route\":\"$ROUTE\",\"convoyID\":\"$CONVOY\",\"transporter\":\"$TRANSPORTER\"}"

# ---------- Transfer Batch-002 ----------
export ROUTE=$(echo -n "Route-B" | base64 | tr -d \\n)
export CONVOY=$(echo -n "CONVOY-102" | base64 | tr -d \\n)
export TRANSPORTER=$(echo -n "Transporter Beta" | base64 | tr -d \\n)

peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"LogisticsContract:TransferBatch","Args":["Batch-002","FactoryMSP","DepotMSP"]}'   --transient "{\"route\":\"$ROUTE\",\"convoyID\":\"$CONVOY\",\"transporter\":\"$TRANSPORTER\"}"

# ---------- Transfer Batch-003 ----------
export ROUTE=$(echo -n "Route-C" | base64 | tr -d \\n)
export CONVOY=$(echo -n "CONVOY-103" | base64 | tr -d \\n)
export TRANSPORTER=$(echo -n "Transporter Alpha" | base64 | tr -d \\n)

peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"LogisticsContract:TransferBatch","Args":["Batch-003","FactoryMSP","DepotMSP"]}'   --transient "{\"route\":\"$ROUTE\",\"convoyID\":\"$CONVOY\",\"transporter\":\"$TRANSPORTER\"}"


#--------------GetRouteInfo----------------
peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"LogisticsContract:GetRouteInfo","Args":["Batch-001"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"LogisticsContract:GetRouteInfo","Args":["Batch-002"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"LogisticsContract:GetRouteInfo","Args":["Batch-003"]}'

#--------------GetAlRouteInfo----------------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"Args":["LogisticsContract:GetAllRouteInfo"]}'

----------------------------------Depot Terminal---------------------------------
export QUANTITY=$(echo -n "500" | base64 | tr -d \\n)

peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"DepotContract:ReceiveBatch","Args":["Batch-001"]}'   --transient "{\"quantity\":\"$QUANTITY\"}"


export QUANTITY=$(echo -n "5000" | base64 | tr -d \\n)

peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"DepotContract:ReceiveBatch","Args":["Batch-002"]}'   --transient "{\"quantity\":\"$QUANTITY\"}"

export QUANTITY=$(echo -n "500" | base64 | tr -d \\n)

peer chaincode invoke   -o localhost:7050   --ordererTLSHostnameOverride orderer.supplychain.com   --tls   --cafile "$ORDERER_CA"   -C "$CHANNEL_NAME"   -n supplychain   --peerAddresses localhost:7051 --tlsRootCertFiles "$FACTORY_PEER_TLSROOTCERT"   --peerAddresses localhost:9051 --tlsRootCertFiles "$LOGISTICS_PEER_TLSROOTCERT"   --peerAddresses localhost:11051 --tlsRootCertFiles "$DEPOT_PEER_TLSROOTCERT"   --peerAddresses localhost:12051 --tlsRootCertFiles "$HQ_PEER_TLSROOTCERT"   -c '{"function":"DepotContract:ReceiveBatch","Args":["Batch-003"]}'   --transient "{\"quantity\":\"$QUANTITY\"}"

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"Args":["DepotContract:ReadAllDepotBatches"]}'

----------------------------------HQ Terminal---------------------------------
----------------1.QueryFactoryBatchesByStatus--------------------
peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryFactoryBatchesByStatus","Args":["CREATED"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryFactoryBatchesByStatus","Args":["In-Transit"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryFactoryBatchesByStatus","Args":["Received"]}'

----------------2.QueryBatchesByBatchID--------------------
peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryBatchesByBatchID","Args":["Batch-001"]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryBatchesByBatchID","Args":["Batch-002"]}'

----------------3.QueryAllPublicBatches--------------------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"Args":["HQContract:QueryAllPublicBatches"]}'

----------------4.GetBatchHistoryPublic--------------------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:GetBatchHistoryPublic","Args":["Batch-002"]}'

----------------5.GetBatchesWithPagination (Quantity can't be used as selector)------------------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:GetBatchesWithPagination","Args":["status","CREATED","5",""]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:GetBatchesWithPagination","Args":["type","Steel Rods","5",""]}'

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:GetBatchesWithPagination","Args":["expiryDate","2030-07-01","5",""]}'

----------------6.QueryPublicBatchesByRange (Only Show Batch Public Details)--------------------

peer chaincode query   -C $CHANNEL_NAME   -n supplychain   -c '{"function":"HQContract:QueryPublicBatchesByRange","Args":["BATCH-001","BATCH-006"]}'



